name: Build/Upload Edge
on:
  push:
    branches:
      - 'edge'
      - 'edge-*'
jobs:
  buildtest:
    name: Test Build on ubuntu-latest with JDK 17
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 17
    - name: Set up Ant
      run: sudo apt-get install ant
    - name: Build with Ant
      run: ant -noinput -buildfile build.xml test
  dockertest:
    name: Docker test on ubuntu-latest with JDK 17
    runs-on: ubuntu-latest
    needs: buildtest
    timeout-minutes: 5
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: linux/amd64
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        version: latest
        driver-opts: network=host
    - name: Build Docker
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        cache-from: type=gha,scope=master
        build-args: |
          PROJECT_VERSION=0.0.0
          ANT_ARGS=-Dbuildtype=test -Dversion=0.0.0
        tags: localhost:5000/tester/phantombot:test
    - name: Test with Docker
      run: docker run --rm --name phantombot localhost:5000/tester/phantombot:test launch-docker.sh --version
  build:
    name: Build and upload on ubuntu-latest with JDK 17
    runs-on: ubuntu-latest
    needs: [buildtest, dockertest]
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 17
    - name: Set up Ant
      run: sudo apt-get install ant
    - name: Set up environment variables
      id: build_env
      run: echo "branch=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
    - name: Prep Ant script
      env:
        BRANCH: ${{ steps.build_env.outputs.branch }}
      run: |
        sed -i -r 's/revision="[A-Za-z0-9._-]+"/revision="'$BRANCH'"/;s/branch="[A-Za-z0-9._-]+"/branch="'$BRANCH'"/' ivy.xml
        echo $?
    - name: Build with Ant
      env:
        BUILDTYPE: ${{ format('{0}', steps.build_env.outputs.branch) }}
        ROLLBAR_TOKEN: ${{ secrets.ROLLBAR_TOKEN }}
        ROLLBAR_ENDPOINT: ${{ secrets.ROLLBAR_ENDPOINT }}
        BRANCH: ${{ steps.build_env.outputs.branch }}
      run: ant -noinput -Dversion=$BRANCH -Dbuildtype=$BUILDTYPE -Drollbar_token=$ROLLBAR_TOKEN -Drollbar_endpoint=$ROLLBAR_ENDPOINT -buildfile build.xml dist
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ format('PhantomBot-{0}', steps.build_env.outputs.branch) }}
        path: ${{ format('dist/PhantomBot-{0}', steps.build_env.outputs.branch) }}
