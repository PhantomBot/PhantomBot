name: Build/Upload Edge
on:
  push:
    branches:
      - 'edge'
      - 'edge-*'
jobs:
  buildtest:
    name: Test Build on ubuntu-latest with JDK 11.0.4
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v1
    - name: Set up JDK 11.0.4
      uses: actions/setup-java@v1
      with:
        java-version: 11.0.4
    - name: Set up Ant
      run: sudo apt-get install ant
    - name: Build with Ant
      run: ant -noinput -buildfile build.xml test
  build:
    name: Build and upload on ubuntu-latest with JDK 11.0.4
    runs-on: ubuntu-latest
    needs: buildtest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v1
    - name: Set up JDK 11.0.4
      uses: actions/setup-java@v1
      with:
        java-version: 11.0.4
    - name: Set up Ant
      run: sudo apt-get install ant
    - name: Set up environment variables
      id: build_env
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF##*/})"
    - name: Prep Ant script
      env:
        BRANCH: ${{ steps.build_env.outputs.branch }}
      run: |
        sed -i -r 's/"version" value="[0-9.]+"/"version" value="'$BRANCH'"/' build.xml
        echo $?
        sed -i -r 's/revision="[A-Za-z0-9._-]+"/revision="'$BRANCH'"/;s/branch="[A-Za-z0-9._-]+"/branch="'$BRANCH'"/' ivy.xml
        echo $?
    - name: Build with Ant
      env:
        BUILDTYPE: ${{ format('{0}_build', steps.build_env.outputs.branch) }}
      run: ant -noinput -Dbuildtype=$BUILDTYPE -buildfile build.xml dist
    - name: Prep Artifacts
      env:
        FOLDERFULL: ${{ format('PhantomBot-{0}', steps.build_env.outputs.branch) }}
        FOLDERLIN: ${{ format('PhantomBot-{0}-lin', steps.build_env.outputs.branch) }}
        FOLDERWIN: ${{ format('PhantomBot-{0}-win', steps.build_env.outputs.branch) }}
        FOLDERMAC: ${{ format('PhantomBot-{0}-mac', steps.build_env.outputs.branch) }}
        FOLDERARM: ${{ format('PhantomBot-{0}-arm', steps.build_env.outputs.branch) }}
      run: |
        mkdir dist/$FOLDERLIN
        rsync -rav --progress dist/$FOLDERFULL dist/$FOLDERLIN --exclude java-runtime --exclude java-runtime-macos --exclude launch.bat
        mkdir dist/$FOLDERWIN
        rsync -rav --progress dist/$FOLDERFULL dist/$FOLDERWIN --exclude java-runtime-linux --exclude java-runtime-macos --exclude launch.sh --exclude launch-service.sh
        mkdir dist/$FOLDERMAC
        rsync -rav --progress dist/$FOLDERFULL dist/$FOLDERMAC --exclude java-runtime-linux --exclude java-runtime --exclude launch.bat
        mkdir dist/$FOLDERARM
        rsync -rav --progress dist/$FOLDERFULL dist/$FOLDERARM --exclude java-runtime-linux --exclude java-runtime --exclude java-runtime-macos --exclude launch.bat
    - name: Upload Artifact (Full)
      uses: actions/upload-artifact@v1
      with:
        name: ${{ format('PhantomBot-{0}', steps.build_env.outputs.branch) }}
        path: ${{ format('dist/PhantomBot-{0}', steps.build_env.outputs.branch) }}
    - name: Upload Artifact (Linux)
      uses: actions/upload-artifact@v1
      with:
        name: ${{ format('PhantomBot-{0}-lin', steps.build_env.outputs.branch) }}
        path: ${{ format('dist/PhantomBot-{0}-lin', steps.build_env.outputs.branch) }}
    - name: Upload Artifact (Windows)
      uses: actions/upload-artifact@v1
      with:
        name: ${{ format('PhantomBot-{0}-win', steps.build_env.outputs.branch) }}
        path: ${{ format('dist/PhantomBot-{0}-win', steps.build_env.outputs.branch) }}
    - name: Upload Artifact (macOS)
      uses: actions/upload-artifact@v1
      with:
        name: ${{ format('PhantomBot-{0}-mac', steps.build_env.outputs.branch) }}
        path: ${{ format('dist/PhantomBot-{0}-mac', steps.build_env.outputs.branch) }}
    - name: Upload Artifact (ARM)
      uses: actions/upload-artifact@v1
      with:
        name: ${{ format('PhantomBot-{0}-arm', steps.build_env.outputs.branch) }}
        path: ${{ format('dist/PhantomBot-{0}-arm', steps.build_env.outputs.branch) }}
