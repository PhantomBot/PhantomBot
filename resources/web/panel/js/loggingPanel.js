/*
 * Copyright (C) 2016 www.phantombot.net
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/* 
 * @author IllusionaryOne
 */

/*
 * loggingPanel.js
 * Drives the Logging Panel
 */
(function() {

    var loggingMode = false,
        modeIcon = [];
        modeIcon['false'] = "<i style=\"color: #6136b1\" class=\"fa fa-circle-o\" />";
        modeIcon['true'] = "<i style=\"color: #6136b1\" class=\"fa fa-circle\" />";

    /*
     * onMessage
     * This event is generated by the connection (WebSocket) object.
     */
    function onMessage(message) {
        var msgObject;

        try {
            msgObject = JSON.parse(message.data);
        } catch (ex) {
            return;
        }

        // Check for dbkeysresult queries
        if (panelHasQuery(msgObject)) {
            var mode;
            if (panelCheckQuery(msgObject, 'logging_mode')) {
                loggingMode = (panelMatch(msgObject['results']['loggingEnabled'], 'true'));
                $("#loggingMode").html(modeIcon[loggingMode]);
            }
        }
    }

    /**
     * @function doQuery
     */
    function doQuery() {
        sendDBQuery("logging_mode", "settings", "loggingEnabled");
    }

    /**
     * @function changeLoggingStatus
     * @param {String} mode
     */
    function changeLoggingStatus(mode) {
        $("#loggingMode").html("<i style=\"color: #6136b1\" class=\"fa fa-spinner fa-spin\" />");
        sendCommand("log " + mode);
        setTimeout(function() { doQuery(); }, 500);
    }

    // Import the HTML file for this panel.
    $("#loggingPanel").load("/panel/logging.html");

    // Load the DB items for this panel, wait to ensure that we are connected.
    var interval = setInterval(function() {
        var active = $("#tabs").tabs("option", "active");
        if (active == 5 && isConnected) {
            doQuery();
            clearInterval(interval); 
        }
    }, 200);

    // Query the DB every 30 seconds for updates.
    setInterval(function() {
        var active = $("#tabs").tabs("option", "active");
        if (active == 5 && isConnected) {
            newPanelAlert('Refreshing Logging Data', 'success', 1000);
            doQuery();
        }
    }, 3e4);

    // Export functions - Needed when calling from HTML.
    $.loggingOnMessage = onMessage;
    $.changeLoggingStatus = changeLoggingStatus;
})();
